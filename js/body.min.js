var buttonHover = function() {
    $('.deeper-button').each(function() {

        $(this).mouseenter(function(e) {
           var parentOffset = $(this).offset(); 
          
           var relX = e.pageX - parentOffset.left;
           var relY = e.pageY - parentOffset.top;
           $(this).find('.hover-effect').css({"left": relX, "top": relY });
        });

        $(this).mouseleave(function(e) {

             var parentOffset = $(this).offset(); 

             var relX = e.pageX - parentOffset.left;
             var relY = e.pageY - parentOffset.top;
             $(this).find('.hover-effect').css({"left": relX, "top": relY });
        });
    })
}

buttonHover();


var fly = function() {
    $('#scroll-top').on('click', function() {
        $(this).addClass('flyout');
    })
}

fly();



/*
* Javascript to show and hide cookie banner using localstroage
*/

/**
 * Shows the Cookie banner
 */
const showCookieBanner = () => {
  const cookieBanner = document.getElementsByClassName('nk-cookie-banner')[0];
  cookieBanner.style.display = 'block';
};

/**
 * Hides the Cookie banner and saves the value to localstorage
 */
const hideCookieBanner = () => {
  localStorage.setItem('web_dev_isCookieAccepted', 'yes');

  const cookieBanner = document.getElementsByClassName('nk-cookie-banner')[0];
  cookieBanner.style.display = 'none';
};

/**
 * Checks the localstorage and shows Cookie banner based on it.
 */
const initializeCookieBanner = () => {
  const isCookieAccepted = localStorage.getItem('web_dev_isCookieAccepted');
  if (isCookieAccepted === null) {
    localStorage.clear();
    localStorage.setItem('web_dev_isCookieAccepted', 'no');
    showCookieBanner();
  }
  if (isCookieAccepted === 'no') {
    showCookieBanner();
  }
};

// Assigning values to window object
$(document).ready(initializeCookieBanner());
// window.onload = initializeCookieBanner();
window.nk_hideCookieBanner = hideCookieBanner;

$(document).ready(() => {
  $('#fullScreenButton')
      .click(() => {
        if (screenfull.isEnabled) {
          screenfull.toggle();
          $('#fullscreen').removeAttr('class');
          $('#fullscreen').attr('class',
  screenfull.isFullscreen ? 'bi bi-fullscreen':'bi bi-fullscreen-exit');
        } else {
          alert('Your browser doesn\'t support full screen');
        }
        if (screenfull.isEnabled) {
          screenfull.on('change', () => {
            console.log('Am I fullscreen?',
          screenfull.isFullscreen ? 'Yes' : 'No');
          });
        }
      });
});


const searchToggle = (obj, evt) => {
  const container = $(obj).closest('#search-wrapper');
  const icon = $(obj).closest('#search-icon')
  if (!container.hasClass('active')) {
    container.addClass('active');
    icon.addClass('search-icon')
    evt.preventDefault();
  } else if (container.hasClass('active') && $(obj)
      .closest('#input-holder').length == 0) {
    container.removeClass('active');
    icon.removeClass('search-icon')
    // clear input
    container.find('#search-input').val('');
    // clear and hide result container when we press close
    container.find('#result-container').fadeOut(100, () => {
      $(this).empty();
    });
  }
}
const submitFn = (obj, evt) => {
  value = $(obj).find('#search-input').val().trim().toLowerCase();
  _html = 'Searching for: ';
  if (!value.length) {
    _html = 'Ehem, I can\'t search nothing';
  } else {
    _html += '<b>' + value + '</b>';
  }
  $(obj).find('#result-container').html('<span>' + _html + '</span>');
  $(obj).find('#result-container').fadeIn(100);
  evt.preventDefault();
}
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJ1dHRvbi5qcyIsImNvb2tpZS1iYW5uZXIuanMiLCJmdWxsc2NyZWVuLmpzIiwic2VhcmNoLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUNsQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDekNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQ3BCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJib2R5Lm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBidXR0b25Ib3ZlciA9IGZ1bmN0aW9uKCkge1xuICAgICQoJy5kZWVwZXItYnV0dG9uJykuZWFjaChmdW5jdGlvbigpIHtcblxuICAgICAgICAkKHRoaXMpLm1vdXNlZW50ZXIoZnVuY3Rpb24oZSkge1xuICAgICAgICAgICB2YXIgcGFyZW50T2Zmc2V0ID0gJCh0aGlzKS5vZmZzZXQoKTsgXG4gICAgICAgICAgXG4gICAgICAgICAgIHZhciByZWxYID0gZS5wYWdlWCAtIHBhcmVudE9mZnNldC5sZWZ0O1xuICAgICAgICAgICB2YXIgcmVsWSA9IGUucGFnZVkgLSBwYXJlbnRPZmZzZXQudG9wO1xuICAgICAgICAgICAkKHRoaXMpLmZpbmQoJy5ob3Zlci1lZmZlY3QnKS5jc3Moe1wibGVmdFwiOiByZWxYLCBcInRvcFwiOiByZWxZIH0pO1xuICAgICAgICB9KTtcblxuICAgICAgICAkKHRoaXMpLm1vdXNlbGVhdmUoZnVuY3Rpb24oZSkge1xuXG4gICAgICAgICAgICAgdmFyIHBhcmVudE9mZnNldCA9ICQodGhpcykub2Zmc2V0KCk7IFxuXG4gICAgICAgICAgICAgdmFyIHJlbFggPSBlLnBhZ2VYIC0gcGFyZW50T2Zmc2V0LmxlZnQ7XG4gICAgICAgICAgICAgdmFyIHJlbFkgPSBlLnBhZ2VZIC0gcGFyZW50T2Zmc2V0LnRvcDtcbiAgICAgICAgICAgICAkKHRoaXMpLmZpbmQoJy5ob3Zlci1lZmZlY3QnKS5jc3Moe1wibGVmdFwiOiByZWxYLCBcInRvcFwiOiByZWxZIH0pO1xuICAgICAgICB9KTtcbiAgICB9KVxufVxuXG5idXR0b25Ib3ZlcigpO1xuXG5cbnZhciBmbHkgPSBmdW5jdGlvbigpIHtcbiAgICAkKCcjc2Nyb2xsLXRvcCcpLm9uKCdjbGljaycsIGZ1bmN0aW9uKCkge1xuICAgICAgICAkKHRoaXMpLmFkZENsYXNzKCdmbHlvdXQnKTtcbiAgICB9KVxufVxuXG5mbHkoKTtcblxuXG4iLCIvKlxuKiBKYXZhc2NyaXB0IHRvIHNob3cgYW5kIGhpZGUgY29va2llIGJhbm5lciB1c2luZyBsb2NhbHN0cm9hZ2VcbiovXG5cbi8qKlxuICogU2hvd3MgdGhlIENvb2tpZSBiYW5uZXJcbiAqL1xuY29uc3Qgc2hvd0Nvb2tpZUJhbm5lciA9ICgpID0+IHtcbiAgY29uc3QgY29va2llQmFubmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnbmstY29va2llLWJhbm5lcicpWzBdO1xuICBjb29raWVCYW5uZXIuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XG59O1xuXG4vKipcbiAqIEhpZGVzIHRoZSBDb29raWUgYmFubmVyIGFuZCBzYXZlcyB0aGUgdmFsdWUgdG8gbG9jYWxzdG9yYWdlXG4gKi9cbmNvbnN0IGhpZGVDb29raWVCYW5uZXIgPSAoKSA9PiB7XG4gIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCd3ZWJfZGV2X2lzQ29va2llQWNjZXB0ZWQnLCAneWVzJyk7XG5cbiAgY29uc3QgY29va2llQmFubmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnbmstY29va2llLWJhbm5lcicpWzBdO1xuICBjb29raWVCYW5uZXIuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbn07XG5cbi8qKlxuICogQ2hlY2tzIHRoZSBsb2NhbHN0b3JhZ2UgYW5kIHNob3dzIENvb2tpZSBiYW5uZXIgYmFzZWQgb24gaXQuXG4gKi9cbmNvbnN0IGluaXRpYWxpemVDb29raWVCYW5uZXIgPSAoKSA9PiB7XG4gIGNvbnN0IGlzQ29va2llQWNjZXB0ZWQgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnd2ViX2Rldl9pc0Nvb2tpZUFjY2VwdGVkJyk7XG4gIGlmIChpc0Nvb2tpZUFjY2VwdGVkID09PSBudWxsKSB7XG4gICAgbG9jYWxTdG9yYWdlLmNsZWFyKCk7XG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3dlYl9kZXZfaXNDb29raWVBY2NlcHRlZCcsICdubycpO1xuICAgIHNob3dDb29raWVCYW5uZXIoKTtcbiAgfVxuICBpZiAoaXNDb29raWVBY2NlcHRlZCA9PT0gJ25vJykge1xuICAgIHNob3dDb29raWVCYW5uZXIoKTtcbiAgfVxufTtcblxuLy8gQXNzaWduaW5nIHZhbHVlcyB0byB3aW5kb3cgb2JqZWN0XG4kKGRvY3VtZW50KS5yZWFkeShpbml0aWFsaXplQ29va2llQmFubmVyKCkpO1xuLy8gd2luZG93Lm9ubG9hZCA9IGluaXRpYWxpemVDb29raWVCYW5uZXIoKTtcbndpbmRvdy5ua19oaWRlQ29va2llQmFubmVyID0gaGlkZUNvb2tpZUJhbm5lcjtcbiIsIiQoZG9jdW1lbnQpLnJlYWR5KCgpID0+IHtcbiAgJCgnI2Z1bGxTY3JlZW5CdXR0b24nKVxuICAgICAgLmNsaWNrKCgpID0+IHtcbiAgICAgICAgaWYgKHNjcmVlbmZ1bGwuaXNFbmFibGVkKSB7XG4gICAgICAgICAgc2NyZWVuZnVsbC50b2dnbGUoKTtcbiAgICAgICAgICAkKCcjZnVsbHNjcmVlbicpLnJlbW92ZUF0dHIoJ2NsYXNzJyk7XG4gICAgICAgICAgJCgnI2Z1bGxzY3JlZW4nKS5hdHRyKCdjbGFzcycsXG4gIHNjcmVlbmZ1bGwuaXNGdWxsc2NyZWVuID8gJ2JpIGJpLWZ1bGxzY3JlZW4nOidiaSBiaS1mdWxsc2NyZWVuLWV4aXQnKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBhbGVydCgnWW91ciBicm93c2VyIGRvZXNuXFwndCBzdXBwb3J0IGZ1bGwgc2NyZWVuJyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHNjcmVlbmZ1bGwuaXNFbmFibGVkKSB7XG4gICAgICAgICAgc2NyZWVuZnVsbC5vbignY2hhbmdlJywgKCkgPT4ge1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ0FtIEkgZnVsbHNjcmVlbj8nLFxuICAgICAgICAgIHNjcmVlbmZ1bGwuaXNGdWxsc2NyZWVuID8gJ1llcycgOiAnTm8nKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSk7XG59KTtcblxuIiwiY29uc3Qgc2VhcmNoVG9nZ2xlID0gKG9iaiwgZXZ0KSA9PiB7XG4gIGNvbnN0IGNvbnRhaW5lciA9ICQob2JqKS5jbG9zZXN0KCcjc2VhcmNoLXdyYXBwZXInKTtcbiAgY29uc3QgaWNvbiA9ICQob2JqKS5jbG9zZXN0KCcjc2VhcmNoLWljb24nKVxuICBpZiAoIWNvbnRhaW5lci5oYXNDbGFzcygnYWN0aXZlJykpIHtcbiAgICBjb250YWluZXIuYWRkQ2xhc3MoJ2FjdGl2ZScpO1xuICAgIGljb24uYWRkQ2xhc3MoJ3NlYXJjaC1pY29uJylcbiAgICBldnQucHJldmVudERlZmF1bHQoKTtcbiAgfSBlbHNlIGlmIChjb250YWluZXIuaGFzQ2xhc3MoJ2FjdGl2ZScpICYmICQob2JqKVxuICAgICAgLmNsb3Nlc3QoJyNpbnB1dC1ob2xkZXInKS5sZW5ndGggPT0gMCkge1xuICAgIGNvbnRhaW5lci5yZW1vdmVDbGFzcygnYWN0aXZlJyk7XG4gICAgaWNvbi5yZW1vdmVDbGFzcygnc2VhcmNoLWljb24nKVxuICAgIC8vIGNsZWFyIGlucHV0XG4gICAgY29udGFpbmVyLmZpbmQoJyNzZWFyY2gtaW5wdXQnKS52YWwoJycpO1xuICAgIC8vIGNsZWFyIGFuZCBoaWRlIHJlc3VsdCBjb250YWluZXIgd2hlbiB3ZSBwcmVzcyBjbG9zZVxuICAgIGNvbnRhaW5lci5maW5kKCcjcmVzdWx0LWNvbnRhaW5lcicpLmZhZGVPdXQoMTAwLCAoKSA9PiB7XG4gICAgICAkKHRoaXMpLmVtcHR5KCk7XG4gICAgfSk7XG4gIH1cbn1cbmNvbnN0IHN1Ym1pdEZuID0gKG9iaiwgZXZ0KSA9PiB7XG4gIHZhbHVlID0gJChvYmopLmZpbmQoJyNzZWFyY2gtaW5wdXQnKS52YWwoKS50cmltKCkudG9Mb3dlckNhc2UoKTtcbiAgX2h0bWwgPSAnU2VhcmNoaW5nIGZvcjogJztcbiAgaWYgKCF2YWx1ZS5sZW5ndGgpIHtcbiAgICBfaHRtbCA9ICdFaGVtLCBJIGNhblxcJ3Qgc2VhcmNoIG5vdGhpbmcnO1xuICB9IGVsc2Uge1xuICAgIF9odG1sICs9ICc8Yj4nICsgdmFsdWUgKyAnPC9iPic7XG4gIH1cbiAgJChvYmopLmZpbmQoJyNyZXN1bHQtY29udGFpbmVyJykuaHRtbCgnPHNwYW4+JyArIF9odG1sICsgJzwvc3Bhbj4nKTtcbiAgJChvYmopLmZpbmQoJyNyZXN1bHQtY29udGFpbmVyJykuZmFkZUluKDEwMCk7XG4gIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xufSJdfQ==
